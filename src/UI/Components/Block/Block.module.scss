/// The height of a term block.
$term-height: 32px;

/// The width of a term block's border.
$border-width: 4px;

/// The minimum width of a label.
$label-min-width: $term-height / 2;

/// The length of the adjacent side of a right isosceles triangle whose hypothenuse's length is
/// `$term-height + 2 * $border-width`, i.e. `sqrt(hyp * hyp / 2)`.
$var-side: 28.2842712475px;

.expr.faded, .var.faded {
  opacity: 0.5;
}

.expr {
  height: $term-height;
  padding: 0 ($term-height / 4);
  border: $border-width solid;
  border-radius: $term-height;
  font-family: Monaco, Menlo, Consolas, monospace;
  font-size: ($term-height / 2);
  align-items: center;
  text-align: center;
  cursor: default;

  // FIXME: `inline-flex` might be a better choice here. Unfortunately it seems to break dragging
  // for children in Safari 13.0.5.
  display: flex;

  & > .expr, & > .var, & > .ellipsis, & > .dropPlaceholder {
    margin-left: 8px;
  }
}

.expr-label {
  min-width: $label-min-width;
  height: $term-height + ($border-width * 2);
  line-height: $term-height + ($border-width * 2);
}

.expr-label, .var-label {
  & > input {
    font-size: inherit;
    font-family: inherit;
    text-align: center;
    border: none;
    background: none;
    color: inherit;
  }
}

.ellipsis {
  height: $term-height + ($border-width * 2);
  line-height: $term-height + ($border-width * 2);
}

.dropPlaceholder {
  width: ($term-height * 1.5);
  height: $term-height + ($border-width * 2);
  background: transparent;
}

.var-inner {
  position: relative;
  height: $term-height;
  font-family: Monaco, Menlo, Consolas, monospace;
  font-size: ($term-height / 2);
  display: inline-flex;
  align-items: center;
  margin: $border-width ($var-side / 2 + $border-width) $border-width ($var-side / 2 + $border-width);
  cursor: default;
}

.var-side {
  position: absolute;
  width: $var-side;
  height: $var-side;
  transform: rotate(45deg);
  z-index: 1;

  &.left {
    left: (-$term-height / 2 + 4);
    border-bottom-left-radius: ($border-width / 2);
    & > div {
      border-bottom-left-radius: ($border-width / 2);
      margin: 0 0 0 $border-width;
    }
  }

  &.right {
    right: (-$term-height / 2 + 4);
    border-top-right-radius: ($border-width / 2);
    & > div {
      border-top-right-radius: ($border-width / 2);
      margin: $border-width 0 0 0;
    }
  }

  & > div {
    width: ($var-side - $border-width);
    height: ($var-side - $border-width);
  }
}

.var-back {
  position: absolute;
  width: 100%;
  height: $term-height;
  z-index: 0;
}

.var-label {
  margin: 0 2px;
  min-width: $label-min-width;
  height: $term-height;
  line-height: $term-height;
  text-align: center;
  border: $border-width solid;
  border-right: transparent;
  border-left: transparent;
  z-index: 2;
}

.shaking {
  animation: shake .5s linear;
}

@keyframes shake {
  8%, 41% {
    transform: translateX(-6px);
  }
  25%, 58% {
    transform: translateX(6px);
  }
  75% {
    transform: translateX(-3px);
  }
  92% {
    transform: translateX(3px);
  }
  0%, 100% {
    transform: translateX(0);
  }
}
